# Author @santierb
version: 2.1

#####################
# Common Definitions
#####################

# Orb declarations
orbs:
  win: circleci/windows@2.4.0

# Simple YAML anchors
aliases:
  - &project_dir "~/project"

commands:
  dependencies:
    description: "Download dependencies and setup global packages"
    parameters:
      shell:
        type: string
        default: "/bin/bash --login -eo pipefail"
      pub-cache:
        type: string
        default: "~/.pub-cache"
    steps:
      - checkout
      - run:
          name: Download dependencies
          shell: << parameters.shell >>
          command: dart pub get
      - run:
          name: Get jUnit Reporter
          shell: << parameters.shell >>
          command: dart pub global activate junitreport
      - run:
          name: Get Pana
          shell: << parameters.shell >>
          command: dart pub global activate pana

######################
# Workflow definition
######################
workflows:
  version: 2
  test:
    jobs:
      - validate
      - test
      # Uncomment to allow manual publish step
      #- publish:
      #    type: approval
      #    requires:
      #      - test
      #      - validate

##################
# Job Definitions
##################
jobs:
  validate:
    docker:
      - image: dart:latest
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    parallelism: 4
    steps:
      - dependencies:
          shell: "/bin/bash -eo pipefail"
      - run:
          name: Run Dart formatter
          command: dart format --set-exit-if-changed lib
      - run:
          name: Run Dart Analyze
          command: dart analyze
      - run:
          name: Run the example script
          command: dart example/lib/example.dart
      - run:
          name: Run Pana
          command: ~/.pub-cache/bin/pana --no-warning --exit-code-threshold 0
  test:
    docker:
      - image: dart:latest
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    parallelism: 4
    steps:
      - dependencies:
          shell: "/bin/bash -eo pipefail"
      - run:
          name: Make folder for test results
          command: mkdir -p test-results/dart-tests
      - run:
          name: Run tests
          command: dart pub run test --reporter json | ~/.pub-cache/bin/tojunit --output test-results/dart-tests/test-report.xml
      - store_test_results:
          path: test-results
  publish:
    docker:
      - image: dart:latest
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - dependencies:
          shell: "/bin/bash -eo pipefail"
      - run:
          name: Deploy to pub.dev
          command: yes | dart pub publish